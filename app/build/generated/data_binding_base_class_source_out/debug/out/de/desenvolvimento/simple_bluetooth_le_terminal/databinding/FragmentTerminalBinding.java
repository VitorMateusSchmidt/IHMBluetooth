// Generated by view binder compiler. Do not edit!
package de.desenvolvimento.simple_bluetooth_le_terminal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import de.desenvolvimento.simple_bluetooth_le_terminal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTerminalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Adress;

  @NonNull
  public final TextView Variavel;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final ImageButton btnWrite;

  @NonNull
  public final ProgressBar progressBarCorrente;

  @NonNull
  public final ProgressBar progressBarDuty;

  @NonNull
  public final ProgressBar progressBarFreq;

  @NonNull
  public final ProgressBar progressBarTensao;

  @NonNull
  public final ProgressBar progressBarTensaoSet;

  @NonNull
  public final TextView receiveText;

  @NonNull
  public final Spinner spinnerAdress;

  @NonNull
  public final Spinner spinnerVariavel;

  @NonNull
  public final TextView textCorrenteBar;

  @NonNull
  public final TextView textDutyCycle;

  @NonNull
  public final TextView textFreqBar;

  @NonNull
  public final TextView textTensaoBar;

  @NonNull
  public final TextView textTensaoSetBar;

  @NonNull
  public final View view;

  @NonNull
  public final View view10;

  @NonNull
  public final View view11;

  @NonNull
  public final View view12;

  @NonNull
  public final View view13;

  @NonNull
  public final View view14;

  @NonNull
  public final View view15;

  @NonNull
  public final View view17;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view9;

  @NonNull
  public final EditText writeNumber;

  private FragmentTerminalBinding(@NonNull LinearLayout rootView, @NonNull TextView Adress,
      @NonNull TextView Variavel, @NonNull Button btnSend, @NonNull ImageButton btnWrite,
      @NonNull ProgressBar progressBarCorrente, @NonNull ProgressBar progressBarDuty,
      @NonNull ProgressBar progressBarFreq, @NonNull ProgressBar progressBarTensao,
      @NonNull ProgressBar progressBarTensaoSet, @NonNull TextView receiveText,
      @NonNull Spinner spinnerAdress, @NonNull Spinner spinnerVariavel,
      @NonNull TextView textCorrenteBar, @NonNull TextView textDutyCycle,
      @NonNull TextView textFreqBar, @NonNull TextView textTensaoBar,
      @NonNull TextView textTensaoSetBar, @NonNull View view, @NonNull View view10,
      @NonNull View view11, @NonNull View view12, @NonNull View view13, @NonNull View view14,
      @NonNull View view15, @NonNull View view17, @NonNull View view2, @NonNull View view3,
      @NonNull View view9, @NonNull EditText writeNumber) {
    this.rootView = rootView;
    this.Adress = Adress;
    this.Variavel = Variavel;
    this.btnSend = btnSend;
    this.btnWrite = btnWrite;
    this.progressBarCorrente = progressBarCorrente;
    this.progressBarDuty = progressBarDuty;
    this.progressBarFreq = progressBarFreq;
    this.progressBarTensao = progressBarTensao;
    this.progressBarTensaoSet = progressBarTensaoSet;
    this.receiveText = receiveText;
    this.spinnerAdress = spinnerAdress;
    this.spinnerVariavel = spinnerVariavel;
    this.textCorrenteBar = textCorrenteBar;
    this.textDutyCycle = textDutyCycle;
    this.textFreqBar = textFreqBar;
    this.textTensaoBar = textTensaoBar;
    this.textTensaoSetBar = textTensaoSetBar;
    this.view = view;
    this.view10 = view10;
    this.view11 = view11;
    this.view12 = view12;
    this.view13 = view13;
    this.view14 = view14;
    this.view15 = view15;
    this.view17 = view17;
    this.view2 = view2;
    this.view3 = view3;
    this.view9 = view9;
    this.writeNumber = writeNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTerminalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTerminalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_terminal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTerminalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Adress;
      TextView Adress = rootView.findViewById(id);
      if (Adress == null) {
        break missingId;
      }

      id = R.id.Variavel;
      TextView Variavel = rootView.findViewById(id);
      if (Variavel == null) {
        break missingId;
      }

      id = R.id.btn_send;
      Button btnSend = rootView.findViewById(id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btn_write;
      ImageButton btnWrite = rootView.findViewById(id);
      if (btnWrite == null) {
        break missingId;
      }

      id = R.id.progressBarCorrente;
      ProgressBar progressBarCorrente = rootView.findViewById(id);
      if (progressBarCorrente == null) {
        break missingId;
      }

      id = R.id.progressBarDuty;
      ProgressBar progressBarDuty = rootView.findViewById(id);
      if (progressBarDuty == null) {
        break missingId;
      }

      id = R.id.progressBarFreq;
      ProgressBar progressBarFreq = rootView.findViewById(id);
      if (progressBarFreq == null) {
        break missingId;
      }

      id = R.id.progressBarTensao;
      ProgressBar progressBarTensao = rootView.findViewById(id);
      if (progressBarTensao == null) {
        break missingId;
      }

      id = R.id.progressBarTensaoSet;
      ProgressBar progressBarTensaoSet = rootView.findViewById(id);
      if (progressBarTensaoSet == null) {
        break missingId;
      }

      id = R.id.receive_text;
      TextView receiveText = rootView.findViewById(id);
      if (receiveText == null) {
        break missingId;
      }

      id = R.id.spinner_adress;
      Spinner spinnerAdress = rootView.findViewById(id);
      if (spinnerAdress == null) {
        break missingId;
      }

      id = R.id.spinner_variavel;
      Spinner spinnerVariavel = rootView.findViewById(id);
      if (spinnerVariavel == null) {
        break missingId;
      }

      id = R.id.textCorrenteBar;
      TextView textCorrenteBar = rootView.findViewById(id);
      if (textCorrenteBar == null) {
        break missingId;
      }

      id = R.id.textDutyCycle;
      TextView textDutyCycle = rootView.findViewById(id);
      if (textDutyCycle == null) {
        break missingId;
      }

      id = R.id.textFreqBar;
      TextView textFreqBar = rootView.findViewById(id);
      if (textFreqBar == null) {
        break missingId;
      }

      id = R.id.textTensaoBar;
      TextView textTensaoBar = rootView.findViewById(id);
      if (textTensaoBar == null) {
        break missingId;
      }

      id = R.id.textTensaoSetBar;
      TextView textTensaoSetBar = rootView.findViewById(id);
      if (textTensaoSetBar == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view10;
      View view10 = rootView.findViewById(id);
      if (view10 == null) {
        break missingId;
      }

      id = R.id.view11;
      View view11 = rootView.findViewById(id);
      if (view11 == null) {
        break missingId;
      }

      id = R.id.view12;
      View view12 = rootView.findViewById(id);
      if (view12 == null) {
        break missingId;
      }

      id = R.id.view13;
      View view13 = rootView.findViewById(id);
      if (view13 == null) {
        break missingId;
      }

      id = R.id.view14;
      View view14 = rootView.findViewById(id);
      if (view14 == null) {
        break missingId;
      }

      id = R.id.view15;
      View view15 = rootView.findViewById(id);
      if (view15 == null) {
        break missingId;
      }

      id = R.id.view17;
      View view17 = rootView.findViewById(id);
      if (view17 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = rootView.findViewById(id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = rootView.findViewById(id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view9;
      View view9 = rootView.findViewById(id);
      if (view9 == null) {
        break missingId;
      }

      id = R.id.write_number;
      EditText writeNumber = rootView.findViewById(id);
      if (writeNumber == null) {
        break missingId;
      }

      return new FragmentTerminalBinding((LinearLayout) rootView, Adress, Variavel, btnSend,
          btnWrite, progressBarCorrente, progressBarDuty, progressBarFreq, progressBarTensao,
          progressBarTensaoSet, receiveText, spinnerAdress, spinnerVariavel, textCorrenteBar,
          textDutyCycle, textFreqBar, textTensaoBar, textTensaoSetBar, view, view10, view11, view12,
          view13, view14, view15, view17, view2, view3, view9, writeNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
